from manim import *
import cv2

class DataTypes(Scene):
    def construct(self):
        font_to_use = "resources/Quicksand-VariableFont_wght.ttf"
        sql_image = ImageMobject('resources/image (1).png')
        gear_image = ImageMobject('resources/image (2).png').scale(0.7).next_to(sql_image.get_end()-[1.4,-0.72,0],buff=0)
        gear_image.set_z_index(sql_image.z_index)
        sql_logo = Group(sql_image,gear_image).move_to([-4,3,0]).scale(0.2)
        self.play(FadeIn(sql_logo))
        always_rotate(gear_image, rate=60*DEGREES)
        title = Text("Data Types and Managing Data", font=font_to_use).scale(0.6).next_to(sql_logo,RIGHT*3)
        self.wait(2)
        self.play(DrawBorderThenFill(title))
        self.wait(1)
        self.play(FadeToColor(title[:9], YELLOW))
        data_types = Text("Data Types", font=font_to_use).scale(0.6).next_to(title,DOWN)
        data_types.set_stroke(color=BLACK,opacity=1)
        highlighting_rectangle = Rectangle(width=2.3,height=0.28).move_to([0.25,2.26,0])
        highlighting_rectangle.set_fill(color="#1be7ff", opacity=.5)
        highlighting_rectangle.set_stroke(color=None, opacity=0)
        data_types.set_z_index(highlighting_rectangle.z_index+1)
        self.play(Create(highlighting_rectangle))
        self.play(Write(data_types), run_time=1.5)
        # self.wait(2)
        # data_types_text = Text("Data types are like labels that tell a computer what kind of data it's dealing with such\nas numbers, text, or dates so it knows how to store, process, and use it correctly, ensuring \nthat numbers don't get mixed up with words and dates are handled appropriately.", font=font_to_use,line_spacing=1).scale(0.4).next_to([-6,1,0],aligned_edge=LEFT)
        # self.play(Write(data_types_text))
        # self.wait(2)
        # abacus = ImageMobject('resources/abacus (2).png').scale(0.4).move_to([-4.9,-0.8,0])
        # numeric_type = Text("Numeric", font=font_to_use,color=BLUE).scale(0.4).rotate(90*DEGREES).next_to(abacus,LEFT)
        # self.play(FadeIn(abacus,numeric_type))
        # dot1 = Dot(radius=0.05, color=YELLOW).next_to(abacus,DOWN,aligned_edge=LEFT)
        # self.play(FadeIn(dot1))
        # example1 = Text("integer",font=font_to_use).scale(0.4).next_to(dot1)
        # self.play(FadeIn(example1))
        # dot2 = Dot(radius=0.05, color=YELLOW).next_to(dot1,DOWN)
        # self.play(FadeIn(dot2))
        # example2 = Text("float",font=font_to_use).scale(0.4).next_to(dot2)
        # self.play(FadeIn(example2))
        # textual = ImageMobject('resources/keyboard.png').scale(0.45).next_to(abacus,RIGHT*4)
        # textual_type = Text("Textual", font=font_to_use,color=BLUE).scale(0.4).rotate(90*DEGREES).next_to(textual,LEFT)
        # self.play(FadeIn(textual_type,textual))
        # dot3 = Dot(radius=0.05, color=YELLOW).next_to(dot1,RIGHT*10)
        # self.play(FadeIn(dot3))
        # example3 = Text("char",font=font_to_use).scale(0.4).next_to(dot3)
        # self.play(FadeIn(example3))
        # dot4 = Dot(radius=0.05, color=YELLOW).next_to(dot3,DOWN)
        # self.play(FadeIn(dot4))
        # example4 = Text("varchar",font=font_to_use).scale(0.4).next_to(dot4)
        # self.play(FadeIn(example4))
        # dot5 = Dot(radius=0.05, color=YELLOW).next_to(dot4,DOWN)
        # self.play(FadeIn(dot5))
        # example5 = Text("text",font=font_to_use).scale(0.4).next_to(dot5)
        # self.play(FadeIn(example5))
        # boolean = ImageMobject('resources/boolean.png').scale(0.3).next_to(textual,RIGHT*5)
        # boolean_type = Text("Boolean", font=font_to_use,color=BLUE).scale(0.4).rotate(90*DEGREES).next_to(boolean,LEFT)
        # self.play(FadeIn(boolean_type,boolean))
        # dot6 = Dot(radius=0.05, color=YELLOW).next_to(dot3,RIGHT*10)
        # self.play(FadeIn(dot6))
        # example6 = Text("true",font=font_to_use).scale(0.4).next_to(dot6)
        # self.play(FadeIn(example6))
        # dot7 = Dot(radius=0.05, color=YELLOW).next_to(dot6,DOWN)
        # self.play(FadeIn(dot7))
        # example7 = Text("false",font=font_to_use).scale(0.4).next_to(dot7)
        # self.play(FadeIn(example7))
        # date_time = ImageMobject('resources/calendar.png').scale(0.35).next_to(boolean,RIGHT*5)
        # date_time_type = Text("Date and Time", font=font_to_use,color=BLUE).scale(0.4).rotate(90*DEGREES).next_to(date_time,LEFT)
        # self.play(FadeIn(date_time_type,date_time))
        # dot8 = Dot(radius=0.05, color=YELLOW).next_to(dot6,RIGHT*10)
        # self.play(FadeIn(dot8))
        # example8 = Text("date",font=font_to_use).scale(0.4).next_to(dot8)
        # self.play(FadeIn(example8))
        # dot9 = Dot(radius=0.05, color=YELLOW).next_to(dot8,DOWN)
        # self.play(FadeIn(dot9))
        # example9 = Text("time",font=font_to_use).scale(0.4).next_to(dot9)
        # self.play(FadeIn(example9))
        # dot10 = Dot(radius=0.05, color=YELLOW).next_to(dot9,DOWN)
        # self.play(FadeIn(dot10))
        # example10 = Text("timestamp",font=font_to_use).scale(0.4).next_to(dot10)
        # self.play(FadeIn(example10))
        # dot11 = Dot(radius=0.05, color=YELLOW).next_to(dot10,DOWN)
        # self.play(FadeIn(dot11))
        # example11 = Text("interval",font=font_to_use).scale(0.4).next_to(dot11)
        # self.play(FadeIn(example11))
        # other_types = ImageMobject('resources/postgresql.png').scale(0.35).next_to(date_time,RIGHT*5)
        # other_types_type = Text("Other Types", font=font_to_use,color=BLUE).scale(0.4).rotate(90*DEGREES).next_to(other_types,LEFT)
        # self.play(FadeIn(other_types_type,other_types))
        # dot12 = Dot(radius=0.05, color=YELLOW).next_to(dot8,RIGHT*7)
        # self.play(FadeIn(dot12))
        # example12 = Text("For everything else,\nPostgreSQL has a \nrange of specific \ntypes for handling \nvaried data",line_spacing=1,font=font_to_use).scale(0.4).next_to([4,-2.7,0],aligned_edge=LEFT)
        # self.play(FadeIn(example12))
        # self.wait(5)
        # self.play(FadeOut(data_types_text,abacus,numeric_type,dot1,example1,dot2,example2,textual,textual_type,dot3,example3,dot4,example4,dot5,example5,
        #                   boolean,boolean_type,dot6,example6,dot7,example7,date_time,date_time_type,dot8,example8,dot9,example9,
        #                   dot10,example10,dot11,example11,other_types,other_types_type,dot12,example12))
        
        
        
        
        
        
        create = Text("CREATE a Table", font=font_to_use).scale(0.6).next_to(title,DOWN)
        create.set_stroke(color=BLACK,opacity=1)
        highlighting_rectangle1 = Rectangle(width=3.1,height=0.28).move_to([0.25,2.26,0])
        highlighting_rectangle1.set_fill(color="#1be7ff", opacity=.5)
        highlighting_rectangle1.set_stroke(color=None, opacity=0)
        create.set_z_index(highlighting_rectangle1.z_index+1)
        self.play(ReplacementTransform(highlighting_rectangle,highlighting_rectangle1))
        self.play(ReplacementTransform(data_types,create))
        
        self.wait(5)